{"ast":null,"code":"var _jsxFileName = \"/home/renan/Cronometro/cronometro/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Counter from \"./components/counter\";\nimport myaudio from \"./assets/son\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const getYear = new Date().getFullYear();\n  const [countMin, setCountMin] = useState(0);\n  const [countSec, setCountSec] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const [control, setControl] = useState(0);\n  const minute = useRef();\n  const second = useRef();\n  const handleChange = () => {\n    const getMin = minute.current.value;\n    const getSec = second.current.value;\n    if (getMin <= 1440 && getMin >= 0) setCountMin(+minute.current.value);else setCountMin(0);\n    if (getSec <= 59 && getSec >= 0) setCountSec(+second.current.value);else setCountSec(0);\n  };\n  const handleReset = () => {\n    setCountMin(0);\n    setCountSec(0);\n    setIsRunning(false);\n    setControl(0);\n  };\n  useEffect(() => {\n    let interval = null;\n    if (control === 0 && isRunning) {\n      setControl(1);\n    }\n    if (control === 1 && !isRunning) {\n      setControl(0);\n    }\n    if (isRunning && countMin >= 0 && countSec > 0) {\n      interval = setInterval(() => {\n        setCountSec(() => countSec - 1);\n      }, 1000);\n    } else if (isRunning && countMin > 0 && countSec === 0) {\n      setCountMin(() => countMin - 1);\n      setCountSec(() => 59);\n    } else if (!isRunning && countSec !== 0) {\n      clearInterval(interval);\n      setControl(0);\n    } else if (isRunning && countMin === 0 && countSec === 0) {\n      setControl(0);\n      clearInterval(interval);\n      alert('ACABOOOOOOOU!');\n      setIsRunning(false);\n    }\n    return () => clearInterval(interval);\n  }, [countMin, countSec, isRunning]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Contador App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Counter, {\n        minute: minute,\n        handleChange: handleChange,\n        countMin: countMin,\n        second: second,\n        countSec: countSec,\n        setIsRunning: setIsRunning,\n        handleReset: handleReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FVHFna6FA+96hexxYBk20SmA7FY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Counter","myaudio","App","getYear","Date","getFullYear","countMin","setCountMin","countSec","setCountSec","isRunning","setIsRunning","control","setControl","minute","second","handleChange","getMin","current","value","getSec","handleReset","interval","setInterval","clearInterval","alert"],"sources":["/home/renan/Cronometro/cronometro/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Counter from \"./components/counter\";\nimport myaudio from \"./assets/son\"\n\nfunction App() {\n  const getYear = new Date().getFullYear();\n\n  const [countMin, setCountMin] = useState(0);\n  const [countSec, setCountSec] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const [control, setControl] = useState(0);\n\n  const minute = useRef();\n  const second = useRef();\n\n  const handleChange = () => {\n    const getMin = minute.current.value;\n    const getSec = second.current.value;\n\n    if (getMin <= 1440 && getMin >= 0) setCountMin(+minute.current.value);\n    else setCountMin(0);\n\n    if (getSec <= 59 && getSec >= 0) setCountSec(+second.current.value);\n    else setCountSec(0);\n  }\n\n  const handleReset = () => {\n    setCountMin(0);\n    setCountSec(0);\n    setIsRunning(false);\n    setControl(0);\n  };\n\n  useEffect(() => {\n    let interval = null;\n\n    if (control === 0 && isRunning) {\n      setControl(1);\n    }\n\n    if (control === 1 && !isRunning) {\n      setControl(0);\n    }\n\n    if (isRunning && countMin >= 0 && countSec > 0) {\n      interval = setInterval(() => {\n        setCountSec(() => countSec - 1);\n      }, 1000);\n    } else if (isRunning && countMin > 0 && countSec === 0) {\n      setCountMin(() => countMin - 1);\n      setCountSec(() => 59);\n    } else if (!isRunning && countSec !== 0) {\n      clearInterval(interval);\n      setControl(0);\n    } else if (isRunning && countMin === 0 && countSec === 0) {\n      setControl(0);\n      clearInterval(interval);\n      alert('ACABOOOOOOOU!');\n      setIsRunning(false);\n    }\n\n    return () => clearInterval(interval);\n  }, [countMin, countSec, isRunning]);\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Contador App</h1>\n      </header>\n      <main>\n        <Counter\n          minute={minute}\n          handleChange={handleChange}\n          countMin={countMin}\n          second={second}\n          countSec={countSec}\n          setIsRunning={setIsRunning}\n          handleReset={handleReset}\n        />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}