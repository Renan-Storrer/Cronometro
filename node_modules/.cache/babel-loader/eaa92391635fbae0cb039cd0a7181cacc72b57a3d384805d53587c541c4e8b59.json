{"ast":null,"code":"var _jsxFileName = \"/home/renan/Cronometro/cronometro/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Counter from \"./components/counter\";\nimport myaudio from \"./assets/song.mp3\";\nimport './styles/App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const getYear = new Date().getFullYear();\n  const [countMin, setCountMin] = useState(0);\n  const [countSec, setCountSec] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const [control, setControl] = useState(0);\n  const [audio, setAudio] = useState(new Audio(myaudio));\n  const minute = useRef();\n  const second = useRef();\n  const handleChange = () => {\n    const getMin = minute.current.value;\n    const getSec = second.current.value;\n    if (getMin <= 1440 && getMin >= 0) setCountMin(+minute.current.value);else setCountMin(0);\n    if (getSec <= 59 && getSec >= 0) setCountSec(+second.current.value);else setCountSec(0);\n    if (getSec === 0 && getSec === 0) {\n      audio.pause();\n      audio.currentTime = 0;\n    }\n  };\n  const handleReset = () => {\n    setCountMin(0);\n    setCountSec(0);\n    setIsRunning(false);\n    setControl(0);\n    audio.pause();\n    audio.currentTime = 0;\n  };\n  useEffect(() => {\n    let interval = null;\n    if (control === 0 && isRunning) {\n      setControl(1);\n      audio.play();\n      audio.loop = true;\n    }\n    if (control === 1 && !isRunning) {\n      setControl(0);\n      audio.play();\n      audio.loop = true;\n    }\n    if (isRunning && countMin >= 0 && countSec > 0) {\n      interval = setInterval(() => {\n        setCountSec(() => countSec - 1);\n      }, 1000);\n    } else if (isRunning && countMin > 0 && countSec === 0) {\n      setCountMin(() => countMin - 1);\n      setCountSec(() => 59);\n    } else if (!isRunning && countSec !== 0) {\n      clearInterval(interval);\n      audio.play();\n      audio.loop = true;\n      setControl(0);\n    } else if (isRunning && countMin === 0 && countSec === 0) {\n      audio.play();\n      audio.loop = true;\n      setControl(0);\n      clearInterval(interval);\n      alert('ACABOOOOOOOU!');\n      setIsRunning(false);\n    }\n    return () => clearInterval(interval);\n  }, [countMin, countSec, isRunning]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"STRANGER TIMER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Counter, {\n        minute: minute,\n        handleChange: handleChange,\n        countMin: countMin,\n        second: second,\n        countSec: countSec,\n        setIsRunning: setIsRunning,\n        handleReset: handleReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"epIFHF+Cg+XBeJriaIkGDvd87D4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Counter","myaudio","App","getYear","Date","getFullYear","countMin","setCountMin","countSec","setCountSec","isRunning","setIsRunning","control","setControl","audio","setAudio","Audio","minute","second","handleChange","getMin","current","value","getSec","pause","currentTime","handleReset","interval","play","loop","setInterval","clearInterval","alert"],"sources":["/home/renan/Cronometro/cronometro/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Counter from \"./components/counter\";\nimport myaudio from \"./assets/song.mp3\"\nimport './styles/App.scss';\n\nfunction App() {\n  const getYear = new Date().getFullYear();\n\n  const [countMin, setCountMin] = useState(0);\n  const [countSec, setCountSec] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const [control, setControl] = useState(0);\n  const [audio, setAudio] = useState(new Audio(myaudio));\n\n  const minute = useRef();\n  const second = useRef();\n\n  const handleChange = () => {\n    const getMin = minute.current.value;\n    const getSec = second.current.value;\n\n    if (getMin <= 1440 && getMin >= 0) setCountMin(+minute.current.value);\n    else setCountMin(0);\n\n    if (getSec <= 59 && getSec >= 0) setCountSec(+second.current.value);\n    else setCountSec(0);\n    \n    if (getSec === 0 && getSec === 0) {\n      audio.pause();\n      audio.currentTime = 0;\n    }\n  }\n\n\n  const handleReset = () => {\n    setCountMin(0);\n    setCountSec(0);\n    setIsRunning(false);\n    setControl(0);\n    audio.pause();\n    audio.currentTime = 0;\n  };\n\n  useEffect(() => {\n    let interval = null;\n\n    if (control === 0 && isRunning) {\n      setControl(1);\n      audio.play();\n      audio.loop = true;\n    }\n\n    if (control === 1 && !isRunning) {\n      setControl(0);\n      audio.play();\n      audio.loop = true;\n    }\n\n    if (isRunning && countMin >= 0 && countSec > 0) {\n      interval = setInterval(() => {\n        setCountSec(() => countSec - 1);\n      }, 1000);\n    } else if (isRunning && countMin > 0 && countSec === 0) {\n      setCountMin(() => countMin - 1);\n      setCountSec(() => 59);\n    } else if (!isRunning && countSec !== 0) {\n      clearInterval(interval);\n      audio.play();\n      audio.loop = true;\n      setControl(0);\n    } else if (isRunning && countMin === 0 && countSec === 0) {\n      audio.play();\n      audio.loop = true;\n      setControl(0);\n      clearInterval(interval);\n      alert('ACABOOOOOOOU!');\n      setIsRunning(false);\n    }\n\n    return () => clearInterval(interval);\n  }, [countMin, countSec, isRunning]);\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>STRANGER TIMER</h1>\n      </header>\n      <main>\n        <Counter\n          minute={minute}\n          handleChange={handleChange}\n          countMin={countMin}\n          second={second}\n          countSec={countSec}\n          setIsRunning={setIsRunning}\n          handleReset={handleReset}\n        />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}